{"mappings":"AAAA,MAAMA,EAAO,CACXC,OAAQC,SAASC,cAAc,UAEjC,IAAIC,EAAU,KACVC,EAAO,KACPC,EAAS,KAGc,SAAlBC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,G,CAUwB,IAArDO,EAAa,KAqBjBhB,EAAKC,OAAOgB,iBAAiB,UAnBS,SAAfC,GACrBA,EAAIC,iBACJf,EAAUgB,OAAOpB,EAAKC,OAAOQ,MAAMY,OACnChB,EAAOe,OAAOpB,EAAKC,OAAOqB,KAAKD,OAC/Bf,EAASc,OAAOpB,EAAKC,OAAOsB,OAAOF,OAEnC,IAAK,IAAIG,EAAI,EAAGA,GAAKlB,EAAQkB,GAAK,EAChCR,EAAaS,YAAW,KACtBlB,EAAciB,EAAGpB,GACdsB,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,QAAQC,IAAI,uBAAqBpB,QAAiBC,MAAU,IAE7DoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBkB,QAAQC,IAAI,sBAAoBpB,QAAiBC,MAAU,GAC3D,GACFL,GAAWC,E","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  formEl: document.querySelector('.form'),\n};\nlet delayMs = null;\nlet step = null; // тут хранятся значения полей формы.\nlet amount = null;\n\n// Функция, которая создает 1 промис...\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\n// Алгоритм\n// 1- создать функцию обработчик по submit\n// 2- цикл, в котором будет столько итераций, сколько пользователь ввел число в поле Amount.\n// 3- внутри цикла, создать сет интервал, с задержской \"delay\"/ внутри него вызвать createPromise(i, delay)\n\nlet intervalId = null;\n// Функция, которая обрабатывает отправку форм!\nfunction handlerSubmit(evt) {\n  evt.preventDefault();\n  delayMs = Number(refs.formEl.delay.value);\n  step = Number(refs.formEl.step.value);\n  amount = Number(refs.formEl.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    intervalId = setTimeout(() => {\n      createPromise(i, delayMs)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, (delayMs += step));\n  }\n}\n\nrefs.formEl.addEventListener('submit', handlerSubmit);\n// прппр\n"],"names":["$47d4ff9957288465$var$refs","formEl","document","querySelector","$47d4ff9957288465$var$delayMs","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$intervalId","addEventListener","evt","preventDefault","Number","value","step","amount","i","setTimeout","then","console","log","catch"],"version":3,"file":"03-promises.c209b6b8.js.map"}