{"mappings":"YAAA,IAAMA,EAAO,CACXC,OAAQC,SAASC,cAAc,UAE7BC,EAAU,KACVC,EAAO,KACPC,EAAS,KAyCbN,EAAKC,OAAOM,iBAAiB,UAnBS,SAAfC,G,kBAONC,YAAW,YA1BD,SAAJC,EAAUC,GAC/BC,QAAQC,IAAIF,GACZ,IAAMG,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQ,CAAER,WAAUC,UAEpBQ,EAAO,CAAET,WAAUC,S,KAoBnBS,CAAcC,EAAGjB,GACdkB,MAAK,SAAAC,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MACjBC,QAAQC,IAAI,uBAAwCW,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,IAE3Dc,OAAM,SAAAF,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MAClBC,QAAQC,IAAI,sBAAuCW,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,MAE3DP,GAAWC,E,EAdjBG,EAAIkB,iBACJtB,EAAUuB,OAAO3B,EAAKC,OAAOU,MAAMiB,OACnCvB,EAAOsB,OAAO3B,EAAKC,OAAO4B,KAAKD,OAC/BtB,EAASqB,OAAO3B,EAAKC,OAAO6B,OAAOF,OAEnC,IAAK,IAAIG,EAAI,EAAGA,GAAKzB,EAAQyB,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  formEl: document.querySelector('.form'),\n};\nlet delayMs = null;\nlet step = null; // тут хранятся значения полей формы.\nlet amount = null;\n\n// Функция, которая создает 1 промис...\nfunction createPromise(position, delay) {\n  console.log(delay);\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\n// Алгоритм\n// 1- создать функцию обработчик по submit\n// 2- цикл, в котором будет столько итераций, сколько пользователь ввел число в поле Amount.\n// 3- внутри цикла, создать сет интервал, с задержской \"delay\"/ внутри него вызвать createPromise(i, delay)\n\nlet intervalId = null;\n// Функция, которая обрабатывает отправку форм!\nfunction handlerSubmit(evt) {\n  evt.preventDefault();\n  delayMs = Number(refs.formEl.delay.value);\n  step = Number(refs.formEl.step.value);\n  amount = Number(refs.formEl.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    intervalId = setTimeout(() => {\n      createPromise(i, delayMs)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, (delayMs += step));\n  }\n}\n\nrefs.formEl.addEventListener('submit', handlerSubmit);\n// прппр\n"],"names":["$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","$ce04d3a99e08e73b$var$delayMs","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","addEventListener","evt","setTimeout","position","delay","console","log","shouldResolve","Math","random","Promise","resolve","reject","$ce04d3a99e08e73b$var$createPromise","i","then","param","concat","catch","preventDefault","Number","value","step","amount","i1","_loop"],"version":3,"file":"03-promises.42f92040.js.map"}